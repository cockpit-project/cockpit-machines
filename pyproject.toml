[tool.ruff]
select = [
    "A",       # flake8-builtins
    "B",       # flake8-bugbear
    "C4",      # flake8-comprehensions
    "D300",    # pydocstyle: Forbid ''' in docstrings
    "E",       # pycodestyle
    "EXE",     # flake8-executable
    "F",       # pyflakes
    "FBT",     # flake8-boolean-trap
    "G",       # flake8-logging-format
    "I",       # isort
    "ICN",     # flake8-import-conventions
    "ISC",     # flake8-implicit-str-concat
    "PLE",     # pylint errors
    "PGH",     # pygrep-hooks
    "PT",      # flake8-pytest-style
    "RSE",     # flake8-raise
    "RUF",     # ruff rules
    "T10",     # flake8-debugger
    "TCH",     # flake8-type-checking
    "W",       # warnings (mostly whitespace)
    "YTT",     # flake8-2020
]
exclude = [
    ".git/",
    "modules/",
    "node_modules/",
]
ignore = [
    "A003",  # Class attribute is shadowing a python builtin
    "B011",  # Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "FBT002", # Boolean default value in function definition
    "FBT003", # Boolean positional value in function call
    "PT009", # Use a regular `assert` instead of unittest-style `assertEqual`
    "PT011", # `pytest.raises(OSError)` is too broad
]
# FIXME: we want 118, but needs fixing tests first
line-length = 183
src = []

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
known-first-party = ["cockpit"]
