#!/usr/bin/python3 -cimport os, sys; os.execv(os.path.dirname(sys.argv[1]) + "/common/pywrap", sys.argv)

# This file is part of Cockpit.
#
# Copyright (C) 2023 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

import os

from testlib import MachineCase, nondestructive, test_main


@nondestructive
class TestMachinesManifest(MachineCase):

    def testBasic(self):
        b = self.browser
        m = self.machine

        self.restore_file("/usr/share/dbus-1/system.d/org.libvirt.conf")
        m.execute("rm /usr/share/dbus-1/system.d/org.libvirt.conf")
        self.login_and_go(None)
        b.wait_in_text("#host-apps .pf-m-current", "Overview")

        # HACK: is_pybridge should also check TEST_SCENARIO
        if self.is_pybridge() or os.getenv('TEST_SCENARIO') == 'pybridge':
            self.assertNotIn("Virtual machines", b.text("#host-apps"))
        else:
            self.assertIn("Virtual machines", b.text("#host-apps"))


if __name__ == '__main__':
    test_main()
